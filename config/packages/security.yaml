security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            json_login:
                # api_login is a route we will create below
                check_path: api_login
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #Ok visi gali registruotis
        #Gali daryt changes adminas
        - { path: ^/api/users/\d+$, roles: ROLE_USER, methods: [GET, PUT, DELETE] }
        - { path: ^/api/users, roles: ROLE_ADMIN }
        - { path: ^/api/admins, roles: ROLE_ADMIN}
        - { path: ^/api/doctors/\d+$, roles: [ROLE_DOCTOR, ROLE_ADMIN], methods: [GET, PUT, DELETE] }
        - { path: ^/api/medicines, roles: ROLE_ADMIN, methods: [POST, PUT, DELETE]}
        - { path: ^/api/doctors/\d+/reviews, roles: ROLE_ADMIN, methods: [PUT, DELETE] }
        - { path: ^/api/doctors$, roles: ROLE_ADMIN}
        - { path: ^/api/doctors/\d+/visits, roles: [ROLE_DOCTOR, ROLE_ADMIN], methods: [GET, DELETE] }
        - { path: ^/api/doctors/\d+/visits, roles: ROLE_ADMIN, methods: [PUT] }
     #   - { path: ^/api/doctors/\d+$/reviews, roles: ROLE_USER }

